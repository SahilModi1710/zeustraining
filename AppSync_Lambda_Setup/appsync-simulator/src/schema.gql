# type Job {
#   position: String
#   location: String
# }

# type User {
#   id: String
#   name: String
#   friends: [User]
#   # job: Job
# }

# input UserInput {
#   id: String!
#   name: String!
# }

# type Mutation {
#   createUser(input: UserInput!): User
# }

# type Query {
#   users: [User]
#   user: User
#   getUserById(id: String): User
# }

# type EducationalQualification {
#   id: Int!
#   guid: String!
#   aggregate_percentage: Float!
#   passing_year: Int!
#   degree: String!
#   stream: String!
#   college: String!
#   college_city: String!
#   dt_created: String!
#   dt_modified: String!
# }

# type ProfessionalQualification {
#   id: Int!
#   guid: String
#   applicant_type: String!
#   applied_test: Boolean!
#   applied_test_role: String
#   familiarTechnologies: [Technology!]!
#   experienced_qualification: ExperiencedQualification
#   dt_created: String!
#   dt_modified: String!
# }

# type ExperiencedQualification {
#   id: Int!
#   guid: String!
#   experience_year: Int!
#   current_ctc: String!
#   expected_ctc: String!
#   notice_period: Boolean!
#   notice_period_end: String
#   notice_period_duration: Int
#   dt_created: String!
#   dt_modified: String!
#   expertiseTechnologies: [Technology!]!
# }

# type Technology {
#   id: Int!
#   technology_name: String!
#   dt_created: String!
#   dt_modified: String!
# }

# input UserInput {
#   first_name: String!
#   last_name: String!
#   email: String!
#   password: String!
#   phone_no: String!
#   resume: String!
#   portfolio_url: String
#   profile_pic: String
#   dt_created: String!
#   dt_modified: String!
#   educationalQualifications: [EducationalQualificationInput!]!
#   professionalQualifications: [ProfessionalQualificationInput!]!
#   jobRoles: [JobRoleInput!]!
# }

# input EducationalQualificationInput {
#   id: Int!
#   guid: String!
#   aggregate_percentage: Float!
#   passing_year: Int!
#   degree: String!
#   stream: String!
#   college: String!
#   college_city: String!
#   dt_created: String!
#   dt_modified: String!
# }

# input ProfessionalQualificationInput {
#   id: Int!
#   guid: String
#   applicant_type: String!
#   applied_test: Boolean!
#   applied_test_role: String
#   familiarTechnologies: [TechnologyInput!]!
#   experienced_qualification: ExperiencedQualificationInput
#   dt_created: String!
#   dt_modified: String!
# }

# input TechnologyInput {
#   id: Int!
#   technology_name: String!
#   dt_created: String!
#   dt_modified: String!
# }

# input ExperiencedQualificationInput {
#   id: Int!
#   guid: String!
#   experience_year: Int!
#   current_ctc: String!
#   expected_ctc: String!
#   notice_period: Boolean!
#   notice_period_end: String
#   notice_period_duration: Int
#   dt_created: String!
#   dt_modified: String!
#   expertiseTechnologies: [TechnologyInput!]!
# }

# input JobRoleInput {
#   id: Int!
#   guid: String!
#   job_title: String!
#   dt_created: String!
#   dt_modified: String!
# }

# input applicationInput {
#   userId: Int!
#   walkInDriveId: Int!
#   selectedTimeSlotId: Int!
#   updatedResume: String!
#   selectedJobRoleIds: [Int!]!
#   guid: String!
# }

# type User {
#   id: Int!
#   guid: String!
#   first_name: String!
#   last_name: String!
#   email: String!
#   password: String!
#   phone_no: String!
#   resume: String!
#   portfolio_url: String
#   profile_pic: String
#   dt_created: String!
#   dt_modified: String!
#   educationalQualifications: [EducationalQualification!]!
#   professionalQualifications: [ProfessionalQualification!]!
#   jobRoles: [JobRole!]!
#   appliedDrives: [AppliedDrive!]!
# }

type JobRole {
  job_title: String
  package: String
  job_description: String
  job_requirements: String
}

type TimeSlot {
  id: Int!
  slot_timmings: String!
}

type WalkInDrive {
  id: Int!
  guid: String!
  drive_title: String!
  start_date: String!
  end_date: String!
  location: String!
  jobRoles: [String!]!
  timeSlots: [String!]!
  dt_created: String!
  dt_modified: String!
}

input LoginInput {
  email: String!
  password: String!
}

type OutputLogin {
  id: Int!
  guid: String!
  first_name: String!
  last_name: String!
  email: String!
  profile_pic: String
}

# type AppliedDrive {
#   id: Int!
#   guid: String!
#   updated_resume: String
#   timeSlot: TimeSlot!
#   walkInDrive: WalkInDrive!
#   preferredJobroles: [jobRoles!]
#   dt_created: String!
#   dt_modified: String!
# }

input applicationInput {
  user_id: Int!
  updated_resume: String!
  time_slot: Int!
  walkin_drive_id: Int!
  jobRoles: [Int!]
}

type Mutation {
  # createUser(input: UserInput!): User
  applyToDrive(input: applicationInput!): String
}

type Query {
  # users: [User]
  # user: User
  # getUserById(id: Int): User
  getAllWalkInDrives: [WalkInDrive]
  getDriveDetailsByID(guid: String!): [JobRole]
  login(input: LoginInput!): OutputLogin
}
